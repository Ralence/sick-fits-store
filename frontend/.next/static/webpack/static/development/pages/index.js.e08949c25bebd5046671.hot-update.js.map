{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.e08949c25bebd5046671.hot-update.js","sources":["webpack:///./components/Pagination.js"],"sourcesContent":["import React from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport Head from 'next/head';\r\nimport Link from 'next/link';\r\nimport PaginationStyles from './styles/PaginationStyles';\r\nimport { perPage } from '../config';\r\n\r\nconst PAGINATION_QUERY = gql`\r\n    query PAGINATION_QUERY {\r\n        itemsConnection {\r\n            aggregate {\r\n                count\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nconst Pagination = props => {\r\n    return (\r\n        <Query query={PAGINATION_QUERY}>\r\n            {({ data, loading, error }) => {\r\n                const count = data.itemsConnection.aggregate.count;\r\n                const pages = Math.ceil(count / perPage);\r\n                const page = props.page\r\n                return (\r\n                    <PaginationStyles>\r\n                        <Head>\r\n                            <title>Sick Fits! Page {page} of {pages}</title>\r\n                        </Head>\r\n                        <Link href={{\r\n                            pathname: 'items',\r\n                            query: { page: page - 1 }\r\n                        }}>\r\n                            <a>&larr;</a>\r\n                        </Link>\r\n                        <p>Page {props.page} of {pages} </p>\r\n                    </PaginationStyles>\r\n                )\r\n            }}\r\n        </Query>\r\n    )\r\n};\r\n\r\nexport default Pagination;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAGA;AACA;AACA;;;;A","sourceRoot":""}